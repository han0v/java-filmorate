-- Таблица рейтингов (MPA_RATING)
CREATE TABLE IF NOT EXISTS MPA_RATING (
   rating_id INTEGER PRIMARY KEY,
   rating_MPA VARCHAR(50) NOT NULL
);

-- Таблица жанров (GENRES)
CREATE TABLE IF NOT EXISTS GENRES (
    genre_id INTEGER PRIMARY KEY,
    genre VARCHAR(50) NOT NULL
);

-- Таблица пользователей (users)
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    login VARCHAR(50) NOT NULL,
    name VARCHAR(100),
    birthday DATE
);

-- Таблица фильмов (film)
CREATE TABLE IF NOT EXISTS film (
    film_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    release_date DATE,
    duration INTEGER,
    rating_id INTEGER,
    FOREIGN KEY (rating_id) REFERENCES MPA_RATING(rating_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER,
    genre_id INTEGER,
    PRIMARY KEY (film_id, genre_id),
    FOREIGN KEY (film_id) REFERENCES film(film_id),
    FOREIGN KEY (genre_id) REFERENCES GENRES(genre_id)
);

CREATE TABLE IF NOT EXISTS FRIENDS (
    user_id INT,
    friend_id INT,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (friend_id) REFERENCES users(user_id)
);

-- Таблица лайков (film_likes)
CREATE TABLE IF NOT EXISTS film_likes (
    film_id INTEGER,
    user_id INTEGER,
    PRIMARY KEY (film_id, user_id),
    FOREIGN KEY (film_id) REFERENCES film(film_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS directors (
  director_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS films_directors (
  film_id INT REFERENCES film(film_id) ON DELETE CASCADE,
  director_id INT REFERENCES directors(director_id) ON DELETE CASCADE,
  PRIMARY KEY (film_id, director_id)
);

-- Таблица отзывов (reviews)
CREATE TABLE IF NOT EXISTS reviews (
    review_id INTEGER AUTO_INCREMENT PRIMARY KEY,
    content TEXT NOT NULL,
    is_positive BOOLEAN NOT NULL,
    user_id INTEGER NOT NULL,
    film_id INTEGER NOT NULL,
    useful INTEGER DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES film(film_id) ON DELETE CASCADE
);

-- Таблица лайков и дизлайков отзывов (review_likes)
CREATE TABLE IF NOT EXISTS review_likes (
    review_id INTEGER,
    user_id INTEGER,
    is_like BOOLEAN NOT NULL,
    PRIMARY KEY (review_id, user_id),
    FOREIGN KEY (review_id) REFERENCES reviews(review_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Таблица ленты событий (events)
CREATE TABLE IF NOT EXISTS events (
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    event_type VARCHAR(50) NOT NULL,
    operation VARCHAR(50) NOT NULL,
    entity_id BIGINT NOT NULL,
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES users(user_id)
);
